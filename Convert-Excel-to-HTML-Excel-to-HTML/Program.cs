using Spire.Xls;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Convert_Excel_to_HTML_Excel_to_HTML
{
    class Program
    {
        static void Main(string[] args)
        {
            string path = @"test.xlsx";
            string sheetName = @"Sheet1";

            try
            {
                string htmlText = GetHtmlFromXls(path, sheetName);
                Console.WriteLine(RemoveWarn(htmlText));
            }
            catch (Exception ex)
            {

                Console.WriteLine(ex.Message);
            }
            Console.ReadKey();
        }

        /// <summary>
        /// 1. Read the xlsx file
        /// 2. Convert to html format
        /// </summary>
        /// <param name="path">xlsx file path</param>
        /// <param name="sheetName">sheet name, e.g. "Sheet1"</param>
        /// <returns>html formatted text</returns>
        static string GetHtmlFromXls(string path, string sheetName)
        {
            FileStream fs = File.OpenRead(path);

            // FileStream to MemoryStream, to overcome the FileAccess
            byte[] bytes = new byte[fs.Length];
            fs.Read(bytes, 0, (int)fs.Length);
            MemoryStream ms = new MemoryStream(bytes);

            //load Excel file
            Workbook workbook = new Workbook();
            workbook.LoadFromStream(ms);

            //convert Excel to HTML
            Worksheet sheet = workbook.Worksheets[sheetName];
            MemoryStream htmlStream = new MemoryStream();
            sheet.SaveToHtml(htmlStream);

            byte[] byteArray = htmlStream.ToArray();

            return System.Text.Encoding.UTF8.GetString(byteArray);
        }

        /// <summary>
        /// Remove the warning generated by Spire.XLS
        /// </summary>
        /// <param name="sourcestring"></param>
        /// <returns></returns>
        static string RemoveWarn(string sourcestring)
        {
            String matchpattern = @"\s?<h2[^<]*>[^<]+</h2>\s?";
            String replacementpattern = @"";
            return Regex.Replace(sourcestring, matchpattern, replacementpattern);
        }
    }
}
